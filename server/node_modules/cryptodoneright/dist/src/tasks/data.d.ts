/// <reference types="node" />
export declare function encrypt(data: Buffer, callback?: (err?: any, response?: Buffer) => any): Promise<any>;
export declare function encrypt_with_key(data: Buffer, key_hex: string, callback?: (err?: any, response?: Buffer) => any): Promise<any>;
export declare function encrypt_chunk(chunk: any, state: any, finalize?: boolean): Promise<any>;
export declare function get_encryption_header(key_hex: string, callback?: (err?: any, response?: any) => any): Promise<any>;
export declare function decrypt(encrypted_data: Buffer, key_hex: string, header_hex: string, callback?: (err?: any, response?: Buffer) => any): Promise<any>;
export declare function get_decryption_header(key_hex: string, header_hex: string, callback?: (err?: any, response?: any) => any): Promise<any>;
export declare function decrypt_chunk(chunk: any, state: any, finalize?: boolean): Promise<any>;
declare const _default: {
    encrypt: typeof encrypt;
    decrypt: typeof decrypt;
    encrypt_with_key: typeof encrypt_with_key;
};
export default _default;
